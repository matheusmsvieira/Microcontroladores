1. Escreva os trechos de código assembly do MSP430 para:
	(a) Somente setar o bit menos significativo de R5.
    bis.w #1,R5

	(b) Somente setar dois bits de R6: o menos significativo e o segundo menos significativo.
    bis.w #3, R6
	
	(c) Somente zerar o terceiro bit menos significativo de R7.
    bis.w #4 R7

	(d) Somente zerar o terceiro e o quarto bits menos significativo de R8.
    bis.w #12, R8

	(e) Somente inverter o bit mais significativo de R9.
    xor.w #8000H, R9
    

	(f) Inverter o nibble mais significativo de R10, e setar o nibble menos significativo de R10. 
	xor.w #f000h, R10
    bis.w #fh,R10

2. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:
if(i>j) f = g+h+10;
else f = g-h-10;

LOOP:cmp.w R8,R7
    jge ELSE
    mov.w #A,R11
    add.w R6,R5
    add.w R11,R5
    mov.w R5,R4

ELSE:
    mov.w #A,R11
    sub.w R6,R5
    sub.w R11,R5
    mov.w R5,R4

EXIT:


3. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:
while(save[i]!=k) i++;
LOOP:
    mov.w R7,R12
    rla R12
    add.w R10,R12
    cmp 0(R12),R9
    jne EXIT
    inc.w R9
    jmp LOOP
EXIT:



4. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:
for(i=0; i<100; i++) A[i] = i*2;

mov.w #0, R7 --------- i=0

LOOP:
    cmp #64, R7
    jge EXIT
    mov.w R7, R11
    rla R11 
    mov.w R11, R12
    add.w R9, R12
    mov.w R11,0(R12)
    inc.w R7
    jmp LOOP
EXIT:

    
    
5. "Traduza" o seguinte trecho de código em C para o assembly do MSP430:
for(i=99; i>=0; i--) A[i] = i*2;

mov.w #63, R7 --------- i=0

LOOP:
    cmp #0, R7 
    jl EXIT
    mov.w R7, R11
    rla R11 
    mov.w R11, R12
    add.w R9, R12
    mov.w R11,0(R12)
    inc.w R7
    jmp LOOP
EXIT:

